// <autogenerated />
#pragma warning disable 618 // Ignore obsolete members warnings
#pragma warning disable 105 // Ignore duplicate namespaces
#pragma warning disable 1591 // Ignore missing XML comment warnings
#pragma warning disable CS8669 // Ignore annotation for nullable reference types
#pragma warning disable CS9113 // Parameter is unread
#pragma warning disable CS0114
#pragma warning disable CS0108
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using Uno.UI;
using Uno.UI.Xaml;
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
using Microsoft.UI.Xaml.Controls.Primitives;
using Microsoft.UI.Xaml.Data;
using Microsoft.UI.Xaml.Documents;
using Microsoft.UI.Xaml.Media;
using Microsoft.UI.Xaml.Media.Animation;
using Microsoft.UI.Xaml.Shapes;
using Windows.UI.Text;
using Uno.Extensions;
using Uno;
using Uno.UI.Helpers;
using Uno.UI.Helpers.Xaml;
using ImmutableEditableObjectAdapter.Samples.Uno;

#if HAS_UNO_SKIA
using _View = Microsoft.UI.Xaml.UIElement;
#elif __ANDROID__
using _View = Android.Views.View;
#elif __APPLE_UIKIT__ || __IOS__ || __TVOS__
using _View = UIKit.UIView;
#else
using _View = Microsoft.UI.Xaml.UIElement;
#endif

namespace ImmutableEditableObjectAdapter.Samples.Uno
{
	[global::System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessage("Trimming", "IL2026", Justification = "Generated code")]
	[global::System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessage("Trimming", "IL2111", Justification = "Generated code")]
	public sealed partial class GlobalStaticResources
	{
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		private const string __baseUri_prefix_ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985 = "ms-appx:///";
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		private const string __baseUri_ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985 = "ms-appx:///Styles/ColorPaletteOverride.xaml";
		// This non-static inner class is a means of reducing size of AOT compilations by avoiding many accesses to static members from a static callsite, which adds costly class initializer checks each time.
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		internal string __ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985_checksum() => "45b1411627c9b54e2be6e7f9d3755462acd467e6d610565ead326c733cf326cb";
		[global::System.Runtime.CompilerServices.CreateNewOnMetadataUpdate]
		internal sealed class ResourceDictionarySingleton__ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985 : global::Uno.UI.IXamlResourceDictionaryProvider
		{
			private static global::Microsoft.UI.Xaml.NameScope __nameScope = new global::Microsoft.UI.Xaml.NameScope();
			private static global::Uno.UI.IXamlResourceDictionaryProvider __that;
			internal static global::Uno.UI.IXamlResourceDictionaryProvider Instance
			{
				get
				{
					if (__that == null)
					{
						__that = new ResourceDictionarySingleton__ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985();
					}

					return __that;
				}
			}

			private readonly global::Uno.UI.Xaml.XamlParseContext __ParseContext_;
			internal static global::Uno.UI.Xaml.XamlParseContext GetParseContext() => ((ResourceDictionarySingleton__ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985)Instance).__ParseContext_;

			public ResourceDictionarySingleton__ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985()
			{
				__ParseContext_ = global::ImmutableEditableObjectAdapter.Samples.Uno.GlobalStaticResources.__ParseContext_;
			}

			// Skipping initializer 1 for PrimaryColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 2 for OnPrimaryColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 3 for PrimaryContainerColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 4 for OnPrimaryContainerColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 5 for SecondaryColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 6 for OnSecondaryColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 7 for SecondaryContainerColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 8 for OnSecondaryContainerColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 9 for TertiaryColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 10 for OnTertiaryColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 11 for TertiaryContainerColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 12 for OnTertiaryContainerColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 13 for ErrorColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 14 for ErrorContainerColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 15 for OnErrorColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 16 for OnErrorContainerColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 17 for BackgroundColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 18 for OnBackgroundColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 19 for SurfaceColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 20 for OnSurfaceColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 21 for SurfaceVariantColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 22 for OnSurfaceVariantColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 23 for OutlineColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 24 for OnSurfaceInverseColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 25 for SurfaceInverseColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 26 for PrimaryInverseColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 27 for SurfaceTintColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 28 for OutlineVariantColor Light - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 29 for PrimaryColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 30 for OnPrimaryColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 31 for PrimaryContainerColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 32 for OnPrimaryContainerColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 33 for SecondaryColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 34 for OnSecondaryColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 35 for SecondaryContainerColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 36 for OnSecondaryContainerColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 37 for TertiaryColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 38 for OnTertiaryColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 39 for TertiaryContainerColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 40 for OnTertiaryContainerColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 41 for ErrorColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 42 for ErrorContainerColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 43 for OnErrorColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 44 for OnErrorContainerColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 45 for BackgroundColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 46 for OnBackgroundColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 47 for SurfaceColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 48 for OnSurfaceColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 49 for SurfaceVariantColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 50 for OnSurfaceVariantColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 51 for OutlineColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 52 for OnSurfaceInverseColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 53 for SurfaceInverseColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 54 for PrimaryInverseColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 55 for SurfaceTintColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			// Skipping initializer 56 for OutlineVariantColor Dark - Literal declaration, will be eagerly materialized and added to the dictionary
			private global::Microsoft.UI.Xaml.ResourceDictionary _ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985_ResourceDictionary;

			internal global::Microsoft.UI.Xaml.ResourceDictionary ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985_ResourceDictionary
			{
				get
				{
					if (_ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985_ResourceDictionary == null)
					{
						_ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985_ResourceDictionary = 
						new global::Microsoft.UI.Xaml.ResourceDictionary
						{
							IsParsing = true,
							ThemeDictionaries = {
							["Light"] = 
							new global::Uno.UI.Xaml.WeakResourceInitializer(this, __ResourceOwner_1 => 
							{
								return 
									new global::Microsoft.UI.Xaml.ResourceDictionary
									{
										[
										"PrimaryColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 89, 70, 210)										,
										[
										"OnPrimaryColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 255, 255, 255)										,
										[
										"PrimaryContainerColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 229, 222, 255)										,
										[
										"OnPrimaryContainerColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 23, 0, 101)										,
										[
										"SecondaryColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 107, 78, 162)										,
										[
										"OnSecondaryColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 255, 255, 255)										,
										[
										"SecondaryContainerColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 235, 221, 255)										,
										[
										"OnSecondaryContainerColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 34, 5, 85)										,
										[
										"TertiaryColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 0, 97, 164)										,
										[
										"OnTertiaryColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 255, 255, 255)										,
										[
										"TertiaryContainerColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 207, 228, 255)										,
										[
										"OnTertiaryContainerColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 0, 29, 54)										,
										[
										"ErrorColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 179, 38, 30)										,
										[
										"ErrorContainerColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 249, 222, 220)										,
										[
										"OnErrorColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 255, 255, 255)										,
										[
										"OnErrorContainerColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 65, 14, 11)										,
										[
										"BackgroundColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 252, 251, 255)										,
										[
										"OnBackgroundColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 28, 27, 31)										,
										[
										"SurfaceColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 255, 255, 255)										,
										[
										"OnSurfaceColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 28, 27, 31)										,
										[
										"SurfaceVariantColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 242, 239, 245)										,
										[
										"OnSurfaceVariantColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 139, 132, 148)										,
										[
										"OutlineColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 121, 116, 126)										,
										[
										"OnSurfaceInverseColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 244, 239, 244)										,
										[
										"SurfaceInverseColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 49, 48, 51)										,
										[
										"PrimaryInverseColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 200, 191, 255)										,
										[
										"SurfaceTintColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 89, 70, 210)										,
										[
										"OutlineVariantColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 201, 197, 208)										,
									}
								;
							}
							)
							,
							["Dark"] = 
							new global::Uno.UI.Xaml.WeakResourceInitializer(this, __ResourceOwner_1 => 
							{
								return 
									new global::Microsoft.UI.Xaml.ResourceDictionary
									{
										[
										"PrimaryColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 199, 191, 255)										,
										[
										"OnPrimaryColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 42, 0, 159)										,
										[
										"PrimaryContainerColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 65, 41, 186)										,
										[
										"OnPrimaryContainerColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 228, 223, 255)										,
										[
										"SecondaryColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 205, 194, 220)										,
										[
										"OnSecondaryColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 51, 45, 65)										,
										[
										"SecondaryContainerColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 67, 60, 82)										,
										[
										"OnSecondaryContainerColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 237, 223, 255)										,
										[
										"TertiaryColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 159, 202, 255)										,
										[
										"OnTertiaryColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 0, 50, 88)										,
										[
										"TertiaryContainerColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 0, 73, 125)										,
										[
										"OnTertiaryContainerColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 209, 228, 255)										,
										[
										"ErrorColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 255, 180, 171)										,
										[
										"ErrorContainerColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 147, 0, 10)										,
										[
										"OnErrorColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 105, 0, 5)										,
										[
										"OnErrorContainerColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 255, 218, 214)										,
										[
										"BackgroundColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 28, 27, 31)										,
										[
										"OnBackgroundColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 229, 225, 230)										,
										[
										"SurfaceColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 48, 45, 55)										,
										[
										"OnSurfaceColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 230, 225, 229)										,
										[
										"SurfaceVariantColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 71, 70, 79)										,
										[
										"OnSurfaceVariantColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 201, 197, 208)										,
										[
										"OutlineColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 146, 143, 153)										,
										[
										"OnSurfaceInverseColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 28, 27, 31)										,
										[
										"SurfaceInverseColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 230, 225, 229)										,
										[
										"PrimaryInverseColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 42, 0, 159)										,
										[
										"SurfaceTintColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 199, 191, 255)										,
										[
										"OutlineVariantColor"
										] = 
										global::Microsoft.UI.ColorHelper.FromARGB(255, 87, 84, 93)										,
									}
								;
							}
							)
							,
							},
						}
						;
						_ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985_ResourceDictionary.Source = new global::System.Uri("ms-resource:///Files/Styles/ColorPaletteOverride.xaml");
						_ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985_ResourceDictionary.CreationComplete();
					}
					return _ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985_ResourceDictionary;
				}
			}

			global::Microsoft.UI.Xaml.ResourceDictionary global::Uno.UI.IXamlResourceDictionaryProvider.GetResourceDictionary() => ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985_ResourceDictionary;
		}

		internal static global::Microsoft.UI.Xaml.ResourceDictionary ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985_ResourceDictionary => ResourceDictionarySingleton__ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985.Instance.GetResourceDictionary();
	}
}
namespace ImmutableEditableObjectAdapter.Samples.Uno.__Resources
{
	[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
	[global::System.Runtime.CompilerServices.CreateNewOnMetadataUpdate]
	internal class __ColorPaletteOverride_6acd3e31fd1cf74bad6fe8ae493e7985_ColorPaletteOverrideRD
	{
	}
}
